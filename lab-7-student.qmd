---
title: "Lab 7: SQL Mystery"
author: "Megan Redican"
format: html
embed-resources: true
code-tools: true
toc: true
editor: source
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

For this lab, you will be joining and filtering related data sets to solve a murder mystery!

# Part 1: GitHub Workflow

At the top of the document (in the YAML) there is an `author` line that says 
`"Your name here!"`. Change this to be your name and save your file either by
clicking on the blue floppy disk or with a shortcut (command / control + s). 

Be sure to [commit the files to your repo](https://happygitwithr.com/existing-github-first#stage-and-commit). 

Let's get started!


# Part 2: Some Words of Advice

-   Set chunk options carefully.

-   Make sure you don't print out more output than you need.

-   Make sure you don't assign more objects than necessary---avoid "object junk"
in your environment.

-   Make your code readable and nicely formatted.

-   Think through your desired result **before** writing any code.

# Part 3: Finding the Killer

Northwestern University's Knight Lab wanted to help sharpen users' database
skills, so they created a murder mystery. Can you solve this crime in SQL City??

The relational data you will be working with contains tables with different
pieces of information pertinent to the crime - people, social media check-ins,
driver's licenses, crime scene reports, police interviews, and more!


## Access the Data

This code chunk will read in **all** of the tables of data for you. Don't modify or
remove this! Take some time to look at each file type so that 

```{r}
#| message: false
#| warning: false
#| label: read-in-data

library(tidyverse)

# If purrr is not detected, install the package
if (!"purrr" %in% installed.packages()) install.packages("purrr")

source("https://raw.githubusercontent.com/jcanner/stat_210_2025_website/main/labs/instructions/lab-7-setup.R")
```

## Solve the Crime

### Crime Scene Report

Detective Wickham reaches out to you...

> A crime has taken place and I need your help! There was a murder in SQL City sometime on January 15, 2018. Could you retrieve the crime scene report from the police departmentâ€™s database and follow the clues to find the person responsible for the murder?!


**Step 1: Find the police report in `crime_scene_report`. Then used the information in the report to move on to the next data source based on the information learned.**

```{r}
# Code for looking at the relevant crime scene report.
SQL_CRIME <- crime_scene_report |>
  filter(city == "SQL City", type == "murder", date == "20180115")
  
glimpse(SQL_CRIME)
```

```{r}
SQL_CRIME$description
```


# It looks like the relevant crime scene says there were 2 witnesses on security cameras. 
# One lives on Northwestern Dr. and the other lives on Franklin Ave. I can use the person data and filter via adress

```{r}
#filtering person for adresses
SQL_PERSON <- person|>
  filter(address_street_name %in% c("Franklin Ave", "Northwestern Dr"))
```

```{r}
# Filtering specifically for Annabel
SUSPECT1 <- SQL_PERSON |>
  filter(str_starts(name, "Annabel")) 
view(SUSPECT1)

```

```{r}
# Filtering interview for Annabel
SUSPECT1_INTERVIEW <- interview |>
  filter( person_id == "16371")
view(SUSPECT1_INTERVIEW)
```

```{r}
SUSPECT1_INTERVIEW$transcript
```

# I found Annabel's interview! Based on her statement I will have to filter through the gym membership check in dates to see who was in the gym on january 9 besides Annabel.

```{r}
# filtering for date in gym check in data

SQL_GYM_CHECKIN <- get_fit_now_check_in |>
  filter(check_in_date == "20180109")
view(SQL_GYM_CHECKIN)
```



**Next Steps: Follow the evidence to the person responsible for the murder, building a report as you go.**
There are accomplices, some knowingly and some unknowingly, but there is only one mastermind.


Solve the murder mystery, showing **all of your work in this document**. Your
document and code must be well organized, easy to follow, and reproducible.

+ Use headers and written descriptions to indicate what you are doing.
+ Use `dplyr` verbs and `join` functions rather than just looking through the
tables manually. Functions from `stringr` and `lubridate` will also be useful.
+ Use good code formatting practices.
+ Comment your code.
+ Cite any external sources you use to solve the mystery.



::: callout-note
## And the final suspect is...

*put the name of the person responsible for the murder here.*
:::
